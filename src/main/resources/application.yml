spring:
  application:
    name: crud
  datasource:
    url: jdbc:postgresql://localhost:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          azure-dev:
            client-id: ${AZURE_CLIENT_ID}
            client-secret: ${AZURE_CLIENT_SECRET}
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Microsoft
            provider: azure
        provider:
          azure:
            authorization-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/token
            issuer-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/v2.0
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: name
      resourceserver:
        jwt:
          # issuer-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/v2.0
          issuer-uri: https://sts.windows.net/${AZURE_TENANT_ID}/
  cache:
    type: redis
    redis:
      time-to-live: 3600 # 1 hour
  data:
    redis:
      host: localhost
      port: 6379
logging:
  level:
    org.springframework.security: DEBUG
